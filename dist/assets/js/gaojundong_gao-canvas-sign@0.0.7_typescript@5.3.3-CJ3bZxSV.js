import{d as t,m as o,o as e,c as n}from"./gaojundong_@vue_runtime-core@3.4.19-B_DqhbiT.js";import{k as r}from"./gaojundong_@vue_reactivity@3.4.19-BAlQ3FKq.js";var i=Object.defineProperty,s=(t,o,e)=>(((t,o,e)=>{o in t?i(t,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[o]=e})(t,"symbol"!=typeof o?o+"":o,e),e);let u;const a=new Uint8Array(16);function l(){if(!u&&(u=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!u))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return u(a)}const d=[];for(let m=0;m<256;++m)d.push((m+256).toString(16).slice(1));const c={randomUUID:typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function p(t,o,e){if(c.randomUUID&&!o&&!t)return c.randomUUID();const n=(t=t||{}).random||(t.rng||l)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,o){e=e||0;for(let t=0;t<16;++t)o[e+t]=n[t];return o}return function(t,o=0){return d[t[o+0]]+d[t[o+1]]+d[t[o+2]]+d[t[o+3]]+"-"+d[t[o+4]]+d[t[o+5]]+"-"+d[t[o+6]]+d[t[o+7]]+"-"+d[t[o+8]]+d[t[o+9]]+"-"+d[t[o+10]]+d[t[o+11]]+d[t[o+12]]+d[t[o+13]]+d[t[o+14]]+d[t[o+15]]}(n)}const h=["id"],f=t({__name:"index",props:{width:{default:300},height:{default:300},color:{default:"#000"},backgroundColor:{default:"#ccc"},lineWidth:{default:2}},setup(t,{expose:i}){let u,a=t;const l=r(`gao-canvas-sign-${p()}`);return o((()=>{!function(){u=document.getElementById(l.value);let t=u.getContext("2d");u.width=a.width,u.height=a.height,t.rect(0,0,u.width,u.height),t.fillStyle=a.backgroundColor,t.fill(),"ontouchstart"in window?u.ontouchstart=t=>{t.preventDefault();let e=t.touches[0],n=u.getBoundingClientRect(),r=e.pageX-n.left-u.clientLeft,i=e.pageY-n.top-u.clientTop,s=new o(r,i,a.color);window.ontouchmove=t=>{let o=t.touches[0],e=o.pageX-n.left-u.clientLeft,r=o.pageY-n.top-u.clientTop;s.addPoint(e,r),s.draw()},window.ontouchend=()=>{window.ontouchmove=null,window.ontouchend=null}}:u.onmousedown=t=>{let e=new o(t.offsetX,t.offsetY,a.color);window.onmousemove=t=>{e.addPoint(t.offsetX,t.offsetY),e.draw()},window.onmouseup=()=>{window.onmousemove=null,window.onmouseup=null}};class o{constructor(t,o,e="#000"){s(this,"startX"),s(this,"startY"),s(this,"color"),s(this,"points"),this.startX=t,this.startY=o,this.color=e,this.points=[]}addPoint(t,o){this.points.push({x:t,y:o})}draw(){t.beginPath(),t.moveTo(this.startX,this.startY),t.lineCap="round",t.lineWidth=a.lineWidth,t.strokeStyle=this.color,this.points.forEach((o=>{t.lineTo(o.x,o.y)})),t.stroke()}}}()})),i({getUrl:function(){return u.toDataURL("image/png")},getBlob:function(){return new Promise((t=>{u.toBlob((o=>{t(o)}))}))}}),(t,o)=>(e(),n("canvas",{id:l.value},null,8,h))}});export{f as j};
